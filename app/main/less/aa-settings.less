@default-gutter: (@grid-gutter-width / 2);

// Just a test
// @state-success-text:#00FF00;

// Override Bootstrap mq break points
@screen-sm:768px;
@screen-md:1024px;
@screen-lg:1441px;

// Override Bootstrap container sizes
@container-tablet: (738px + @grid-gutter-width);
@container-desktop: (994px + @grid-gutter-width);
@container-large-desktop: (1411px + @grid-gutter-width);

// Override Font Awesome font path
@fa-font-path: '../../../bower_components/fontawesome/fonts/';

@aa-gutter-md: 15px;

//
//
// HELPER DOCUMENTATION

// Modified Bootstrap break points
// @screen-xs;             0       -   767     (mobile)
// @screen-sm:768px;       768     -   1023    (tablet portrait)
// @screen-md:1024px;      1024    -   1440    (tablet landscape)
// @screen-lg:1441px;      1441    -   XXXX    (desktop)

// Bootstrap original break points
// @screen-xs is default and equal to max-width (@screen-sm - 1)    0       -       767 
// @screen-sm:768px;                                                768     -       991
// @screen-md:992px;                                                992     -       1199
// @screen-lg:1200px;                                               1200    -       xxxx

// Bootstrap helper classes for showing and hiding content based on media query
// .visible-xs
// .visible-sm
// .visible-md
// .visible-lg

// Bootstraps media queries
// xs is default
// @media (min-width: @screen-sm-min) { ... }
// @media (min-width: @screen-md-min) { ... }
// @media (min-width: @screen-lg-min) { ... }

// Bootstrap media queries ranges
// @media (max-width: @screen-xs-max) { ... }
// @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) { ... }
// @media (min-width: @screen-md-min) and (max-width: @screen-md-max) { ... }
// @media (min-width: @screen-lg-min) { ... }


/* 
    Fluid VS Adaptive Grid
    
    Grid should have this mark up
    div.container-fluid || div.container
        div.row
        >div.col-xx-nn
    
    .col-xx-nn width is always in percent
    .container-fluid makes the grid fluid, like Foundations grid, where column width changes fluid within a range
    .container makes the grid adaptive, where the .container width is changed through media queries and column adapt and "jump to size/place"

*/

// Bootstrap original .container size
// @grid-gutter-width: 30px;
// width: auto;                                                 auto on xs
// @container-tablet: (720px + @grid-gutter-width);             750 on sm
// @container-desktop: (940px + @grid-gutter-width);            970 on md
// @container-large-desktop: (1140px + @grid-gutter-width);     1170 on lg (site max-width)

// Modified Bootstrap .container size
// @container-tablet: (738px + @grid-gutter-width);             (768-30) + 30   = 768 on sm
// @container-desktop: (994px + @grid-gutter-width);            (1024-30) + 30  = 1024 on md
// @container-large-desktop: (1411px + @grid-gutter-width);     (1441-30) + 30  = 1441 on lg